// Generated by Dagger (https://google.github.io/dagger).
package com.close.svea.refactoringsample.DI;

import com.close.svea.refactoringsample.ui.ShowPlacesViewModel;
import com.close.svea.refactoringsample.ui.item.ShowPlacesViewModelFactory;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ShowPlacesViewModelModule_ProvideShowPlaceViewModelFactory
    implements Factory<ShowPlacesViewModel> {
  private final ShowPlacesViewModelModule module;

  private final Provider<ShowPlacesViewModelFactory> placesViewModelFactoryProvider;

  public ShowPlacesViewModelModule_ProvideShowPlaceViewModelFactory(
      ShowPlacesViewModelModule module,
      Provider<ShowPlacesViewModelFactory> placesViewModelFactoryProvider) {
    this.module = module;
    this.placesViewModelFactoryProvider = placesViewModelFactoryProvider;
  }

  @Override
  public ShowPlacesViewModel get() {
    return provideInstance(module, placesViewModelFactoryProvider);
  }

  public static ShowPlacesViewModel provideInstance(
      ShowPlacesViewModelModule module,
      Provider<ShowPlacesViewModelFactory> placesViewModelFactoryProvider) {
    return proxyProvideShowPlaceViewModel(module, placesViewModelFactoryProvider.get());
  }

  public static ShowPlacesViewModelModule_ProvideShowPlaceViewModelFactory create(
      ShowPlacesViewModelModule module,
      Provider<ShowPlacesViewModelFactory> placesViewModelFactoryProvider) {
    return new ShowPlacesViewModelModule_ProvideShowPlaceViewModelFactory(
        module, placesViewModelFactoryProvider);
  }

  public static ShowPlacesViewModel proxyProvideShowPlaceViewModel(
      ShowPlacesViewModelModule instance, ShowPlacesViewModelFactory placesViewModelFactory) {
    return Preconditions.checkNotNull(
        instance.provideShowPlaceViewModel(placesViewModelFactory),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
